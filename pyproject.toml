[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gaphack"
version = "0.4.0"
description = "Gap-Optimized Hierarchical Agglomerative Clustering for DNA barcoding"
readme = "README.md"
authors = [
    {name = "Josh Walker", email = "joshowalker@yahoo.com"}
]
license = {text = "BSD-2-Clause"}
requires-python = ">=3.8"
keywords = ["clustering", "DNA barcoding", "bioinformatics", "hierarchical clustering", "barcode gap"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "numpy>=1.20.0",
    "biopython>=1.79",
    "adjusted-identity @ git+https://github.com/joshuaowalker/adjusted-identity.git",
    "tqdm>=4.65.0",
    "matplotlib>=3.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov",
    "black",
    "flake8",
    "mypy",
]

[project.scripts]
gaphack = "gaphack.cli:main"
gaphack-analyze = "gaphack.analyze_cli:main"
gaphack-refine = "gaphack.refine_cli:main"

[project.urls]
Homepage = "https://github.com/joshuaowalker/gaphack"
Repository = "https://github.com/joshuaowalker/gaphack"
Issues = "https://github.com/joshuaowalker/gaphack/issues"

[tool.setuptools]
packages = ["gaphack"]

[tool.black]
line-length = 100
target-version = ['py38']

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "integration: marks tests as integration tests",
    "performance: marks tests as performance benchmarks",
    "memory: marks tests that monitor memory usage",
    "scalability: marks tests that validate scaling properties",
    "quality: marks tests that validate clustering quality",
    "slow: marks tests that take a long time to run (>60s)"
]